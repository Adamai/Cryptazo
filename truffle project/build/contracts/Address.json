{
  "contractName": "Address",
  "abi": [],
  "metadata": "{\"compiler\":{\"version\":\"0.5.8+commit.23d335f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type,\\r\",\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"openzeppelin-solidity/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"openzeppelin-solidity/contracts/utils/Address.sol\":{\"keccak256\":\"0xb0caafc555cb17f8183f5308424576a395c84930d3d953ac67d5768991805c86\",\"urls\":[\"bzzr://7117e6c195366598693a363737c5c0d1081b4ec09814986372208490784207d7\"]}},\"version\":1}",
  "bytecode": "0x604c6023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea165627a7a723058200370874237cd101ebb94ef0f06fb0180e67794eaacac84f9a5ad71f76c4a90da0029",
  "deployedBytecode": "0x73000000000000000000000000000000000000000030146080604052600080fdfea165627a7a723058200370874237cd101ebb94ef0f06fb0180e67794eaacac84f9a5ad71f76c4a90da0029",
  "sourceMap": "99:884:15:-;;132:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;222:2;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24",
  "deployedSourceMap": "99:884:15:-;;;;;;;;",
  "source": "pragma solidity ^0.5.0;\r\n\r\n/**\r\n * @dev Collection of functions related to the address type,\r\n */\r\nlibrary Address {\r\n    /**\r\n     * @dev Returns true if `account` is a contract.\r\n     *\r\n     * This test is non-exhaustive, and there may be false-negatives: during the\r\n     * execution of a contract's constructor, its address will be reported as\r\n     * not containing a contract.\r\n     *\r\n     * > It is unsafe to assume that an address for which this function returns\r\n     * false is an externally-owned account (EOA) and not a contract.\r\n     */\r\n    function isContract(address account) internal view returns (bool) {\r\n        // This method relies in extcodesize, which returns 0 for contracts in\r\n        // construction, since the code is only stored at the end of the\r\n        // constructor execution.\r\n\r\n        uint256 size;\r\n        // solhint-disable-next-line no-inline-assembly\r\n        assembly { size := extcodesize(account) }\r\n        return size > 0;\r\n    }\r\n}\r\n",
  "sourcePath": "openzeppelin-solidity\\contracts\\utils\\Address.sol",
  "ast": {
    "absolutePath": "openzeppelin-solidity/contracts/utils/Address.sol",
    "exportedSymbols": {
      "Address": [
        2406
      ]
    },
    "id": 2407,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2389,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:15"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "library",
        "documentation": "@dev Collection of functions related to the address type,\r",
        "fullyImplemented": true,
        "id": 2406,
        "linearizedBaseContracts": [
          2406
        ],
        "name": "Address",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 2404,
              "nodeType": "Block",
              "src": "624:356:15",
              "statements": [
                {
                  "assignments": [
                    2397
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2397,
                      "name": "size",
                      "nodeType": "VariableDeclaration",
                      "scope": 2404,
                      "src": "826:12:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2396,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "826:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2398,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "826:12:15"
                },
                {
                  "externalReferences": [
                    {
                      "size": {
                        "declaration": 2397,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "917:4:15",
                        "valueSize": 1
                      }
                    },
                    {
                      "account": {
                        "declaration": 2391,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "937:7:15",
                        "valueSize": 1
                      }
                    }
                  ],
                  "id": 2399,
                  "nodeType": "InlineAssembly",
                  "operations": "{\n    size := extcodesize(account)\n}",
                  "src": "906:41:15"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2402,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 2400,
                      "name": "size",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2397,
                      "src": "964:4:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 2401,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "971:1:15",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "964:8:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 2395,
                  "id": 2403,
                  "nodeType": "Return",
                  "src": "957:15:15"
                }
              ]
            },
            "documentation": "@dev Returns true if `account` is a contract.\r\n\n     * This test is non-exhaustive, and there may be false-negatives: during the\r\nexecution of a contract's constructor, its address will be reported as\r\nnot containing a contract.\r\n\n     * > It is unsafe to assume that an address for which this function returns\r\nfalse is an externally-owned account (EOA) and not a contract.\r",
            "id": 2405,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isContract",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2392,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2391,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 2405,
                  "src": "578:15:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2390,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "578:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "577:17:15"
            },
            "returnParameters": {
              "id": 2395,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2394,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2405,
                  "src": "618:4:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2393,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "618:4:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "617:6:15"
            },
            "scope": 2406,
            "src": "558:422:15",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "internal"
          }
        ],
        "scope": 2407,
        "src": "99:884:15"
      }
    ],
    "src": "0:985:15"
  },
  "legacyAST": {
    "absolutePath": "openzeppelin-solidity/contracts/utils/Address.sol",
    "exportedSymbols": {
      "Address": [
        2406
      ]
    },
    "id": 2407,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2389,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:15"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "library",
        "documentation": "@dev Collection of functions related to the address type,\r",
        "fullyImplemented": true,
        "id": 2406,
        "linearizedBaseContracts": [
          2406
        ],
        "name": "Address",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 2404,
              "nodeType": "Block",
              "src": "624:356:15",
              "statements": [
                {
                  "assignments": [
                    2397
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2397,
                      "name": "size",
                      "nodeType": "VariableDeclaration",
                      "scope": 2404,
                      "src": "826:12:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2396,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "826:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2398,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "826:12:15"
                },
                {
                  "externalReferences": [
                    {
                      "size": {
                        "declaration": 2397,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "917:4:15",
                        "valueSize": 1
                      }
                    },
                    {
                      "account": {
                        "declaration": 2391,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "937:7:15",
                        "valueSize": 1
                      }
                    }
                  ],
                  "id": 2399,
                  "nodeType": "InlineAssembly",
                  "operations": "{\n    size := extcodesize(account)\n}",
                  "src": "906:41:15"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2402,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 2400,
                      "name": "size",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2397,
                      "src": "964:4:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 2401,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "971:1:15",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "964:8:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 2395,
                  "id": 2403,
                  "nodeType": "Return",
                  "src": "957:15:15"
                }
              ]
            },
            "documentation": "@dev Returns true if `account` is a contract.\r\n\n     * This test is non-exhaustive, and there may be false-negatives: during the\r\nexecution of a contract's constructor, its address will be reported as\r\nnot containing a contract.\r\n\n     * > It is unsafe to assume that an address for which this function returns\r\nfalse is an externally-owned account (EOA) and not a contract.\r",
            "id": 2405,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isContract",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2392,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2391,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 2405,
                  "src": "578:15:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2390,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "578:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "577:17:15"
            },
            "returnParameters": {
              "id": 2395,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2394,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2405,
                  "src": "618:4:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2393,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "618:4:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "617:6:15"
            },
            "scope": 2406,
            "src": "558:422:15",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "internal"
          }
        ],
        "scope": 2407,
        "src": "99:884:15"
      }
    ],
    "src": "0:985:15"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.8+commit.23d335f2.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.11",
  "updatedAt": "2019-07-05T14:26:49.516Z",
  "devdoc": {
    "details": "Collection of functions related to the address type,\r",
    "methods": {}
  },
  "userdoc": {
    "methods": {}
  }
}